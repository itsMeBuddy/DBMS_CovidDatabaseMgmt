# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PyQt.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QTableWidgetItem
import sys
import sqlite3


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1278, 743)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.CovidHelathcareDatabase = QtWidgets.QTabWidget(self.centralwidget)
        self.CovidHelathcareDatabase.setGeometry(QtCore.QRect(-1, -1, 1920, 1080))
        self.CovidHelathcareDatabase.setDocumentMode(True)
        self.CovidHelathcareDatabase.setTabsClosable(False)
        self.CovidHelathcareDatabase.setMovable(False)
        self.CovidHelathcareDatabase.setTabBarAutoHide(False)
        self.CovidHelathcareDatabase.setObjectName("CovidHelathcareDatabase")
        self.tab = QtWidgets.QWidget()

        #tab

        self.tab.setObjectName("tab")
        self.aa = QtWidgets.QLabel(self.tab)
        self.aa.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.aa.setObjectName("aa")
        self.ab = QtWidgets.QLabel(self.tab)
        self.ab.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.ab.setObjectName("ab")
        self.ac = QtWidgets.QLabel(self.tab)
        self.ac.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.ac.setObjectName("ac")
        self.ad = QtWidgets.QLabel(self.tab)
        self.ad.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.ad.setObjectName("ad")
        self.ae = QtWidgets.QLabel(self.tab)
        self.ae.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.ae.setObjectName("ae")
        self.af = QtWidgets.QLabel(self.tab)
        self.af.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.af.setObjectName("af")
        self.ag = QtWidgets.QLabel(self.tab)
        self.ag.setGeometry(QtCore.QRect(30, 250, 67, 17))
        self.ag.setObjectName("ag")
        self.ah = QtWidgets.QLabel(self.tab)
        self.ah.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.ah.setObjectName("ah")
        self.ai = QtWidgets.QLabel(self.tab)
        self.ai.setGeometry(QtCore.QRect(30, 310, 67, 17))
        self.ai.setObjectName("ai")
        self.aj = QtWidgets.QLabel(self.tab)
        self.aj.setGeometry(QtCore.QRect(30, 340, 67, 17))
        self.aj.setObjectName("aj")
        self.ak = QtWidgets.QLabel(self.tab)
        self.ak.setGeometry(QtCore.QRect(30, 370, 241, 17))
        self.ak.setObjectName("ak")
        self.al = QtWidgets.QLabel(self.tab)
        self.al.setGeometry(QtCore.QRect(30, 400, 241, 17))
        self.al.setObjectName("al")
        self.aaa = QtWidgets.QLineEdit(self.tab)
        self.aaa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.aaa.setObjectName("aaa")
        self.abb = QtWidgets.QLineEdit(self.tab)
        self.abb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.abb.setObjectName("abb")
        self.acc = QtWidgets.QLineEdit(self.tab)
        self.acc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.acc.setObjectName("acc")
        self.add = QtWidgets.QLineEdit(self.tab)
        self.add.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.add.setObjectName("add")
        self.aee = QtWidgets.QLineEdit(self.tab)
        self.aee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.aee.setObjectName("aee")
        self.aff = QtWidgets.QLineEdit(self.tab)
        self.aff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.aff.setObjectName("aff")
        self.agg = QtWidgets.QLineEdit(self.tab)
        self.agg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.agg.setObjectName("agg")
        self.ahh = QtWidgets.QLineEdit(self.tab)
        self.ahh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.ahh.setObjectName("ahh")
        self.aii = QtWidgets.QLineEdit(self.tab)
        self.aii.setGeometry(QtCore.QRect(350, 310, 270, 25))
        self.aii.setObjectName("aii")
        self.ajj = QtWidgets.QLineEdit(self.tab)
        self.ajj.setGeometry(QtCore.QRect(350, 340, 270, 25))
        self.ajj.setObjectName("ajj")
        self.akk = QtWidgets.QLineEdit(self.tab)
        self.akk.setGeometry(QtCore.QRect(350, 370, 270, 25))
        self.akk.setText("")
        self.akk.setObjectName("akk")
        self.all = QtWidgets.QLineEdit(self.tab)
        self.all.setGeometry(QtCore.QRect(350, 400, 270, 25))
        self.all.setObjectName("all")
        self.am = QtWidgets.QLabel(self.tab)
        self.am.setGeometry(QtCore.QRect(30, 430, 321, 17))
        self.am.setObjectName("am")
        self.amm = QtWidgets.QLineEdit(self.tab)
        self.amm.setGeometry(QtCore.QRect(350, 430, 271, 25))
        self.amm.setObjectName("amm")
        self.axx = QtWidgets.QTableWidget(self.tab)
        self.axx.setGeometry(QtCore.QRect(50, 520, 1500, 400))
        self.axx.setObjectName("axx")
        self.axx.setColumnCount(13)
        self.axx.setRowCount(0)
        self.a1 = QtWidgets.QPushButton(self.tab)
        self.a1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.a1.setObjectName("a1")
        self.a1.clicked.connect(self.InsertDataA)                          #a1
        self.a2 = QtWidgets.QPushButton(self.tab)
        self.a2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.a2.setObjectName("a2")
        self.a2.clicked.connect(self.ShowDataA)                            #a2
        self.a3 = QtWidgets.QPushButton(self.tab)
        self.a3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.a3.setObjectName("a3")
        self.a3.clicked.connect(self.OpenSearchA)                          #a3
        self.a4 = QtWidgets.QPushButton(self.tab)
        self.a4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.a4.setObjectName("a4")
        self.a4.clicked.connect(self.OpenDeleteA)                          #a4
        self.ax = QtWidgets.QLabel(self.tab)
        self.ax.setGeometry(QtCore.QRect(50, 500, 201, 17))
        self.ax.setObjectName("ax")

        #tab_2

        self.CovidHelathcareDatabase.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.ba = QtWidgets.QLabel(self.tab_2)
        self.ba.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.ba.setObjectName("ba")
        self.bb = QtWidgets.QLabel(self.tab_2)
        self.bb.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.bb.setObjectName("bb")
        self.bc = QtWidgets.QLabel(self.tab_2)
        self.bc.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.bc.setObjectName("bc")
        self.bd = QtWidgets.QLabel(self.tab_2)
        self.bd.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.bd.setObjectName("bd")
        self.be = QtWidgets.QLabel(self.tab_2)
        self.be.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.be.setObjectName("be")
        self.bf = QtWidgets.QLabel(self.tab_2)
        self.bf.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.bf.setObjectName("bf")
        self.bg = QtWidgets.QLabel(self.tab_2)
        self.bg.setGeometry(QtCore.QRect(30, 250, 67, 17))
        self.bg.setObjectName("bg")
        self.bh = QtWidgets.QLabel(self.tab_2)
        self.bh.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.bh.setObjectName("bh")
        self.bi = QtWidgets.QLabel(self.tab_2)
        self.bi.setGeometry(QtCore.QRect(30, 310, 67, 17))
        self.bi.setObjectName("bi")
        self.bj = QtWidgets.QLabel(self.tab_2)
        self.bj.setGeometry(QtCore.QRect(30, 340, 67, 17))
        self.bj.setObjectName("bj")
        self.bk = QtWidgets.QLabel(self.tab_2)
        self.bk.setGeometry(QtCore.QRect(30, 370, 241, 17))
        self.bk.setObjectName("bk")
        self.bl = QtWidgets.QLabel(self.tab_2)
        self.bl.setGeometry(QtCore.QRect(30, 400, 241, 17))
        self.bl.setObjectName("bl")
        self.bm = QtWidgets.QLabel(self.tab_2)
        self.bm.setGeometry(QtCore.QRect(30, 430, 321, 17))
        self.bm.setObjectName("bm")
        self.bx = QtWidgets.QLabel(self.tab_2)
        self.bx.setGeometry(QtCore.QRect(50, 500, 241, 17))
        self.bx.setObjectName("bx")

        self.baa = QtWidgets.QLineEdit(self.tab_2)
        self.baa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.baa.setObjectName("baa")
        self.bbb = QtWidgets.QLineEdit(self.tab_2)
        self.bbb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.bbb.setObjectName("bbb")
        self.bcc = QtWidgets.QLineEdit(self.tab_2)
        self.bcc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.bcc.setObjectName("bcc")
        self.bdd = QtWidgets.QLineEdit(self.tab_2)
        self.bdd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.bdd.setObjectName("bdd")
        self.bee = QtWidgets.QLineEdit(self.tab_2)
        self.bee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.bee.setObjectName("bee")
        self.bff = QtWidgets.QLineEdit(self.tab_2)
        self.bff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.bff.setObjectName("bff")
        self.bgg = QtWidgets.QLineEdit(self.tab_2)
        self.bgg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.bgg.setObjectName("bgg")
        self.bhh = QtWidgets.QLineEdit(self.tab_2)
        self.bhh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.bhh.setObjectName("bhh")
        self.bii = QtWidgets.QLineEdit(self.tab_2)
        self.bii.setGeometry(QtCore.QRect(350, 310, 270, 25))
        self.bii.setObjectName("bii")
        self.bjj = QtWidgets.QLineEdit(self.tab_2)
        self.bjj.setGeometry(QtCore.QRect(350, 340, 270, 25))
        self.bjj.setObjectName("bjj")
        self.bkk = QtWidgets.QLineEdit(self.tab_2)
        self.bkk.setGeometry(QtCore.QRect(350, 370, 270, 25))
        self.bkk.setText("")
        self.bkk.setObjectName("bkk")
        self.bll = QtWidgets.QLineEdit(self.tab_2)
        self.bll.setGeometry(QtCore.QRect(350, 400, 270, 25))
        self.bll.setObjectName("bll")
        self.bmm = QtWidgets.QLineEdit(self.tab_2)
        self.bmm.setGeometry(QtCore.QRect(350, 430, 271, 25))
        self.bmm.setObjectName("bmm")
        self.bxx = QtWidgets.QTableWidget(self.tab_2)
        self.bxx.setGeometry(QtCore.QRect(50, 520, 1500, 400))
        self.bxx.setObjectName("bxx")
        self.bxx.setColumnCount(13)
        self.bxx.setRowCount(0)

        self.b1 = QtWidgets.QPushButton(self.tab_2)
        self.b1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.b1.setObjectName("b1")
        self.b1.clicked.connect(self.InsertDataB)                          #b1
        self.b2 = QtWidgets.QPushButton(self.tab_2)
        self.b2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.b2.setObjectName("b2")
        self.b2.clicked.connect(self.ShowDataB)                            #b2
        self.b3 = QtWidgets.QPushButton(self.tab_2)
        self.b3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.b3.setObjectName("b3")
        self.b3.clicked.connect(self.OpenSearchB)                          #b3
        self.b4 = QtWidgets.QPushButton(self.tab_2)
        self.b4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.b4.setObjectName("b4")
        self.b4.clicked.connect(self.OpenDeleteB)                          #b4

        #tab_3

        self.CovidHelathcareDatabase.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.ce = QtWidgets.QLabel(self.tab_3)
        self.ce.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.ce.setObjectName("ce")
        self.cg = QtWidgets.QLabel(self.tab_3)
        self.cg.setGeometry(QtCore.QRect(30, 250, 67, 17))
        self.cg.setObjectName("cg")
        self.cd = QtWidgets.QLabel(self.tab_3)
        self.cd.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.cd.setObjectName("cd")
        self.ci = QtWidgets.QLabel(self.tab_3)
        self.ci.setGeometry(QtCore.QRect(30, 310, 67, 17))
        self.ci.setObjectName("ci")
        self.c3 = QtWidgets.QPushButton(self.tab_3)
        self.c3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.c3.setObjectName("c3")
        self.c3.clicked.connect(self.OpenSearchC)                          #c3
        self.cc = QtWidgets.QLabel(self.tab_3)
        self.cc.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.cc.setObjectName("cc")
        self.c2 = QtWidgets.QPushButton(self.tab_3)
        self.c2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.c2.setObjectName("c2")
        self.c2.clicked.connect(self.ShowDataC)                            #c2
        self.ca = QtWidgets.QLabel(self.tab_3)
        self.ca.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.ca.setObjectName("ca")
        self.ch = QtWidgets.QLabel(self.tab_3)
        self.ch.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.ch.setObjectName("ch")

        self.c4 = QtWidgets.QPushButton(self.tab_3)
        self.c4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.c4.setObjectName("c4")
        self.c4.clicked.connect(self.OpenDeleteC)                          #c4


        self.cj = QtWidgets.QLabel(self.tab_3)
        self.cj.setGeometry(QtCore.QRect(30, 340, 67, 17))
        self.cj.setObjectName("cj")
        self.cf = QtWidgets.QLabel(self.tab_3)
        self.cf.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.cf.setObjectName("cf")
        self.c1 = QtWidgets.QPushButton(self.tab_3)
        self.c1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.c1.setObjectName("c1")
        self.c1.clicked.connect(self.InsertDataC)                          #c1
        self.cb = QtWidgets.QLabel(self.tab_3)
        self.cb.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.cb.setObjectName("cb")
        self.cx = QtWidgets.QLabel(self.tab_3)
        self.cx.setGeometry(QtCore.QRect(50, 440, 181, 17))
        self.cx.setObjectName("cx")






        self.caa = QtWidgets.QLineEdit(self.tab_3)
        self.caa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.caa.setObjectName("caa")
        self.cbb = QtWidgets.QLineEdit(self.tab_3)
        self.cbb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.cbb.setObjectName("cbb")
        self.ccc = QtWidgets.QLineEdit(self.tab_3)
        self.ccc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.ccc.setObjectName("ccc")
        self.cdd = QtWidgets.QLineEdit(self.tab_3)
        self.cdd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.cdd.setObjectName("cdd")
        self.cee = QtWidgets.QLineEdit(self.tab_3)
        self.cee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.cee.setObjectName("cee")
        self.cff = QtWidgets.QLineEdit(self.tab_3)
        self.cff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.cff.setObjectName("cff")
        self.cgg = QtWidgets.QLineEdit(self.tab_3)
        self.cgg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.cgg.setObjectName("cgg")
        self.chh = QtWidgets.QLineEdit(self.tab_3)
        self.chh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.chh.setObjectName("chh")
        self.cii = QtWidgets.QLineEdit(self.tab_3)
        self.cii.setGeometry(QtCore.QRect(350, 310, 270, 25))
        self.cii.setObjectName("cii")
        self.cjj = QtWidgets.QLineEdit(self.tab_3)
        self.cjj.setGeometry(QtCore.QRect(350, 340, 270, 25))
        self.cjj.setObjectName("cjj")
        self.cxx = QtWidgets.QTableWidget(self.tab_3)
        self.cxx.setGeometry(QtCore.QRect(50, 460, 1200, 400))
        self.cxx.setObjectName("cxx")
        self.cxx.setColumnCount(10)
        self.cxx.setRowCount(0)




        #tab_4

        self.CovidHelathcareDatabase.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.de = QtWidgets.QLabel(self.tab_4)
        self.de.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.de.setObjectName("de")
        self.dg = QtWidgets.QLabel(self.tab_4)
        self.dg.setGeometry(QtCore.QRect(30, 250, 321, 17))
        self.dg.setObjectName("dg")
        self.dd = QtWidgets.QLabel(self.tab_4)
        self.dd.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.dd.setObjectName("dd")
        self.d3 = QtWidgets.QPushButton(self.tab_4)
        self.d3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.d3.setObjectName("d3")
        self.d3.clicked.connect(self.OpenSearchD)                          #d3
        self.dc = QtWidgets.QLabel(self.tab_4)
        self.dc.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.dc.setObjectName("dc")
        self.d2 = QtWidgets.QPushButton(self.tab_4)
        self.d2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.d2.setObjectName("d2")
        self.d2.clicked.connect(self.ShowDataD)                            #d2
        self.da = QtWidgets.QLabel(self.tab_4)
        self.da.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.da.setObjectName("da")
        self.dh = QtWidgets.QLabel(self.tab_4)
        self.dh.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.dh.setObjectName("dh")
        self.dxx = QtWidgets.QTableWidget(self.tab_4)
        self.dxx.setGeometry(QtCore.QRect(50, 390, 1000, 400))
        self.dxx.setObjectName("dxx")
        self.dxx.setColumnCount(8)
        self.dxx.setRowCount(0)
        self.d4 = QtWidgets.QPushButton(self.tab_4)
        self.d4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.d4.setObjectName("d4")
        self.d4.clicked.connect(self.OpenDeleteD)                          #d4
        self.df = QtWidgets.QLabel(self.tab_4)
        self.df.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.df.setObjectName("df")
        self.d1 = QtWidgets.QPushButton(self.tab_4)
        self.d1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.d1.setObjectName("d1")
        self.d1.clicked.connect(self.InsertDataD)                          #d1
        self.db = QtWidgets.QLabel(self.tab_4)
        self.db.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.db.setObjectName("db")
        self.dx = QtWidgets.QLabel(self.tab_4)
        self.dx.setGeometry(QtCore.QRect(50, 360, 141, 17))
        self.dx.setObjectName("dx")

        self.daa = QtWidgets.QLineEdit(self.tab_4)
        self.daa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.daa.setObjectName("daa")
        self.dbb = QtWidgets.QLineEdit(self.tab_4)
        self.dbb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.dbb.setObjectName("dbb")
        self.dcc = QtWidgets.QLineEdit(self.tab_4)
        self.dcc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.dcc.setObjectName("dcc")
        self.ddd = QtWidgets.QLineEdit(self.tab_4)
        self.ddd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.ddd.setObjectName("ddd")
        self.dee = QtWidgets.QLineEdit(self.tab_4)
        self.dee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.dee.setObjectName("dee")
        self.dff = QtWidgets.QLineEdit(self.tab_4)
        self.dff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.dff.setObjectName("dff")
        self.dgg = QtWidgets.QLineEdit(self.tab_4)
        self.dgg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.dgg.setObjectName("dgg")
        self.dhh = QtWidgets.QLineEdit(self.tab_4)
        self.dhh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.dhh.setObjectName("dhh")


        #tab_5

        self.CovidHelathcareDatabase.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.ee = QtWidgets.QLabel(self.tab_5)
        self.ee.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.ee.setObjectName("ee")
        self.eg = QtWidgets.QLabel(self.tab_5)
        self.eg.setGeometry(QtCore.QRect(30, 250, 111, 17))
        self.eg.setObjectName("eg")
        self.ed = QtWidgets.QLabel(self.tab_5)
        self.ed.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.ed.setObjectName("ed")
        self.e3 = QtWidgets.QPushButton(self.tab_5)
        self.e3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.e3.setObjectName("e3")
        self.e3.clicked.connect(self.OpenSearchE)                          #e3
        self.ec = QtWidgets.QLabel(self.tab_5)
        self.ec.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.ec.setObjectName("ec")
        self.e2 = QtWidgets.QPushButton(self.tab_5)
        self.e2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.e2.setObjectName("e2")
        self.e2.clicked.connect(self.ShowDataE)                            #e2
        self.ea = QtWidgets.QLabel(self.tab_5)
        self.ea.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.ea.setObjectName("ea")
        self.eh = QtWidgets.QLabel(self.tab_5)
        self.eh.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.eh.setObjectName("eh")
        self.exx = QtWidgets.QTableWidget(self.tab_5)
        self.exx.setGeometry(QtCore.QRect(50, 400, 1000, 400))
        self.exx.setObjectName("exx")
        self.exx.setColumnCount(8)
        self.exx.setRowCount(0)
        self.e4 = QtWidgets.QPushButton(self.tab_5)
        self.e4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.e4.setObjectName("e4")
        self.e4.clicked.connect(self.OpenDeleteE)                          #e4
        self.ef = QtWidgets.QLabel(self.tab_5)
        self.ef.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.ef.setObjectName("ef")
        self.e1 = QtWidgets.QPushButton(self.tab_5)
        self.e1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.e1.setObjectName("e1")
        self.e1.clicked.connect(self.InsertDataE)                          #e1
        self.eb = QtWidgets.QLabel(self.tab_5)
        self.eb.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.eb.setObjectName("eb")
        self.ex = QtWidgets.QLabel(self.tab_5)
        self.ex.setGeometry(QtCore.QRect(50, 370, 201, 17))
        self.ex.setObjectName("ex")

        self.eaa = QtWidgets.QLineEdit(self.tab_5)
        self.eaa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.eaa.setObjectName("eaa")
        self.ebb = QtWidgets.QLineEdit(self.tab_5)
        self.ebb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.ebb.setObjectName("ebb")
        self.ecc = QtWidgets.QLineEdit(self.tab_5)
        self.ecc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.ecc.setObjectName("ecc")
        self.edd = QtWidgets.QLineEdit(self.tab_5)
        self.edd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.edd.setObjectName("edd")
        self.eee = QtWidgets.QLineEdit(self.tab_5)
        self.eee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.eee.setObjectName("eee")
        self.eff = QtWidgets.QLineEdit(self.tab_5)
        self.eff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.eff.setObjectName("eff")
        self.egg = QtWidgets.QLineEdit(self.tab_5)
        self.egg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.egg.setObjectName("egg")
        self.ehh = QtWidgets.QLineEdit(self.tab_5)
        self.ehh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.ehh.setObjectName("ehh")

        #tab_6

        self.CovidHelathcareDatabase.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.fe = QtWidgets.QLabel(self.tab_6)
        self.fe.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.fe.setObjectName("fe")
        self.fg = QtWidgets.QLabel(self.tab_6)
        self.fg.setGeometry(QtCore.QRect(30, 250, 161, 17))
        self.fg.setObjectName("fg")
        self.fd = QtWidgets.QLabel(self.tab_6)
        self.fd.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.fd.setObjectName("fd")
        self.fi = QtWidgets.QLabel(self.tab_6)
        self.fi.setGeometry(QtCore.QRect(30, 310, 67, 17))
        self.fi.setObjectName("fi")
        self.f3 = QtWidgets.QPushButton(self.tab_6)
        self.f3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.f3.setObjectName("f3")
        self.f3.clicked.connect(self.OpenSearchF)                          #f3
        self.fc = QtWidgets.QLabel(self.tab_6)
        self.fc.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.fc.setObjectName("fc")
        self.f2 = QtWidgets.QPushButton(self.tab_6)
        self.f2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.f2.setObjectName("f2")
        self.f2.clicked.connect(self.ShowDataF)                            #f2
        self.fa = QtWidgets.QLabel(self.tab_6)
        self.fa.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.fa.setObjectName("fa")
        self.fh = QtWidgets.QLabel(self.tab_6)
        self.fh.setGeometry(QtCore.QRect(30, 280, 67, 17))
        self.fh.setObjectName("fh")
        self.fxx = QtWidgets.QTableWidget(self.tab_6)
        self.fxx.setGeometry(QtCore.QRect(50, 460, 1300, 400))
        self.fxx.setObjectName("fxx")
        self.fxx.setColumnCount(11)
        self.fxx.setRowCount(0)
        self.f4 = QtWidgets.QPushButton(self.tab_6)
        self.f4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.f4.setObjectName("f4")
        self.f4.clicked.connect(self.OpenDeleteF)                          #f4
        self.fj = QtWidgets.QLabel(self.tab_6)
        self.fj.setGeometry(QtCore.QRect(30, 340, 67, 17))
        self.fj.setObjectName("fj")
        self.fk = QtWidgets.QLabel(self.tab_6)
        self.fk.setGeometry(QtCore.QRect(30, 370, 241, 17))
        self.fk.setObjectName("fk")
        self.ff = QtWidgets.QLabel(self.tab_6)
        self.ff.setGeometry(QtCore.QRect(30, 220, 321, 17))
        self.ff.setObjectName("ff")
        self.f1 = QtWidgets.QPushButton(self.tab_6)
        self.f1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.f1.setObjectName("f1")
        self.f1.clicked.connect(self.InsertDataF)                          #f1
        self.fb = QtWidgets.QLabel(self.tab_6)
        self.fb.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.fb.setObjectName("fb")
        self.fx = QtWidgets.QLabel(self.tab_6)
        self.fx.setGeometry(QtCore.QRect(50, 430, 191, 17))
        self.fx.setObjectName("fx")

        self.faa = QtWidgets.QLineEdit(self.tab_6)
        self.faa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.faa.setObjectName("faa")
        self.fbb = QtWidgets.QLineEdit(self.tab_6)
        self.fbb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.fbb.setObjectName("fbb")
        self.fcc = QtWidgets.QLineEdit(self.tab_6)
        self.fcc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.fcc.setObjectName("fcc")
        self.fdd = QtWidgets.QLineEdit(self.tab_6)
        self.fdd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.fdd.setObjectName("fdd")
        self.fee = QtWidgets.QLineEdit(self.tab_6)
        self.fee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.fee.setObjectName("fee")
        self.fff = QtWidgets.QLineEdit(self.tab_6)
        self.fff.setGeometry(QtCore.QRect(350, 220, 270, 25))
        self.fff.setObjectName("fff")
        self.fgg = QtWidgets.QLineEdit(self.tab_6)
        self.fgg.setGeometry(QtCore.QRect(350, 250, 270, 25))
        self.fgg.setObjectName("fgg")
        self.fhh = QtWidgets.QLineEdit(self.tab_6)
        self.fhh.setGeometry(QtCore.QRect(350, 280, 270, 25))
        self.fhh.setObjectName("fhh")
        self.fii = QtWidgets.QLineEdit(self.tab_6)
        self.fii.setGeometry(QtCore.QRect(350, 310, 270, 25))
        self.fii.setObjectName("fii")
        self.fjj = QtWidgets.QLineEdit(self.tab_6)
        self.fjj.setGeometry(QtCore.QRect(350, 340, 270, 25))
        self.fjj.setObjectName("fjj")
        self.fkk = QtWidgets.QLineEdit(self.tab_6)
        self.fkk.setGeometry(QtCore.QRect(350, 370, 270, 25))
        self.fkk.setText("")
        self.fkk.setObjectName("fkk")


        #tab_7

        self.CovidHelathcareDatabase.addTab(self.tab_6, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.ge = QtWidgets.QLabel(self.tab_7)
        self.ge.setGeometry(QtCore.QRect(30, 190, 321, 17))
        self.ge.setObjectName("ge")
        self.gd = QtWidgets.QLabel(self.tab_7)
        self.gd.setGeometry(QtCore.QRect(30, 160, 321, 17))
        self.gd.setObjectName("gd")
        self.g3 = QtWidgets.QPushButton(self.tab_7)
        self.g3.setGeometry(QtCore.QRect(880, 250, 89, 25))
        self.g3.setObjectName("g3")
        self.g3.clicked.connect(self.OpenSearchG)                          #g3
        self.gc = QtWidgets.QLabel(self.tab_7)
        self.gc.setGeometry(QtCore.QRect(30, 130, 321, 17))
        self.gc.setObjectName("gc")
        self.g2 = QtWidgets.QPushButton(self.tab_7)
        self.g2.setGeometry(QtCore.QRect(880, 170, 89, 25))
        self.g2.setObjectName("g2")
        self.g2.clicked.connect(self.ShowDataG)                            #g2
        self.ga = QtWidgets.QLabel(self.tab_7)
        self.ga.setGeometry(QtCore.QRect(30, 70, 321, 17))
        self.ga.setObjectName("ga")
        self.gxx = QtWidgets.QTableWidget(self.tab_7)
        self.gxx.setGeometry(QtCore.QRect(50, 420, 700, 400))
        self.gxx.setObjectName("gxx")
        self.gxx.setColumnCount(5)
        self.gxx.setRowCount(0)
        self.g4 = QtWidgets.QPushButton(self.tab_7)
        self.g4.setGeometry(QtCore.QRect(880, 330, 89, 25))
        self.g4.setObjectName("g4")
        self.g4.clicked.connect(self.OpenDeleteG)                          #g4
        self.g1 = QtWidgets.QPushButton(self.tab_7)
        self.g1.setGeometry(QtCore.QRect(880, 90, 89, 25))
        self.g1.setObjectName("g1")
        self.g1.clicked.connect(self.InsertDataG)                          #g1
        self.gb = QtWidgets.QLabel(self.tab_7)
        self.gb.setGeometry(QtCore.QRect(30, 100, 321, 17))
        self.gb.setObjectName("gb")
        self.gx = QtWidgets.QLabel(self.tab_7)
        self.gx.setGeometry(QtCore.QRect(50, 390, 171, 17))
        self.gx.setObjectName("gx")

        self.gaa = QtWidgets.QLineEdit(self.tab_7)
        self.gaa.setGeometry(QtCore.QRect(350, 70, 270, 25))
        self.gaa.setObjectName("gaa")
        self.gbb = QtWidgets.QLineEdit(self.tab_7)
        self.gbb.setGeometry(QtCore.QRect(350, 100, 270, 25))
        self.gbb.setObjectName("gbb")
        self.gcc = QtWidgets.QLineEdit(self.tab_7)
        self.gcc.setGeometry(QtCore.QRect(350, 130, 270, 25))
        self.gcc.setObjectName("gcc")
        self.gdd = QtWidgets.QLineEdit(self.tab_7)
        self.gdd.setGeometry(QtCore.QRect(350, 160, 270, 25))
        self.gdd.setObjectName("gdd")
        self.gee = QtWidgets.QLineEdit(self.tab_7)
        self.gee.setGeometry(QtCore.QRect(350, 190, 270, 25))
        self.gee.setObjectName("gee")

        #tab_8

        self.CovidHelathcareDatabase.addTab(self.tab_7, "")
        self.tab_8 = QtWidgets.QWidget()
        self.tab_8.setObjectName("tab_8")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_8)
        self.pushButton_5.setGeometry(QtCore.QRect(560, 260, 111, 101))
        self.pushButton_5.setObjectName("pushButton_5")
        self.CovidHelathcareDatabase.addTab(self.tab_8, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.CovidHelathcareDatabase.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)





    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.aa.setText(_translate("MainWindow", "PID"))
        self.ab.setText(_translate("MainWindow", "FName"))
        self.ac.setText(_translate("MainWindow", "MName"))
        self.ad.setText(_translate("MainWindow", "LName"))
        self.ae.setText(_translate("MainWindow", "Gender"))
        self.af.setText(_translate("MainWindow", "EMail"))
        self.ag.setText(_translate("MainWindow", "Contact"))
        self.ah.setText(_translate("MainWindow", "DoB"))
        self.ai.setText(_translate("MainWindow", "Address"))
        self.aj.setText(_translate("MainWindow", "City"))
        self.ak.setText(_translate("MainWindow", "Type(RT-PCR/RapidAntigen))"))
        self.al.setText(_translate("MainWindow", "Status(Waiting/Negative/Positive)"))
        self.am.setText(_translate("MainWindow", "hID"))
        self.a1.setText(_translate("MainWindow", "Add"))
        self.a2.setText(_translate("MainWindow", "Display"))
        self.a3.setText(_translate("MainWindow", "Search"))
        self.a4.setText(_translate("MainWindow", "Delete"))
        self.ax.setText(_translate("MainWindow", "Tests Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab), _translate("MainWindow", "Tests"))
        self.be.setText(_translate("MainWindow", "Gender"))
        self.bg.setText(_translate("MainWindow", "Contact"))
        self.bd.setText(_translate("MainWindow", "LName"))
        self.bi.setText(_translate("MainWindow", "Address"))
        self.b3.setText(_translate("MainWindow", "Search"))
        self.bc.setText(_translate("MainWindow", "MName"))
        self.b2.setText(_translate("MainWindow", "Display"))
        self.ba.setText(_translate("MainWindow", "PID"))
        self.bh.setText(_translate("MainWindow", "DoB"))
        self.b4.setText(_translate("MainWindow", "Update"))
        self.bj.setText(_translate("MainWindow", "City"))
        self.bl.setText(_translate("MainWindow", "Status(Waiting/Negative/Positive)"))
        self.bk.setText(_translate("MainWindow", "Type(RT-PCR/RapidAntigen))"))
        self.bm.setText(_translate("MainWindow", "hID"))
        self.bf.setText(_translate("MainWindow", "EMail"))
        self.b1.setText(_translate("MainWindow", "Add"))
        self.bb.setText(_translate("MainWindow", "FName"))
        self.bx.setText(_translate("MainWindow", "Patients Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_2), _translate("MainWindow", "Patient"))
        self.ce.setText(_translate("MainWindow", "Gender"))
        self.cg.setText(_translate("MainWindow", "Contact"))
        self.cd.setText(_translate("MainWindow", "LName"))
        self.ci.setText(_translate("MainWindow", "Address"))
        self.c3.setText(_translate("MainWindow", "Search"))
        self.cc.setText(_translate("MainWindow", "MName"))
        self.c2.setText(_translate("MainWindow", "Display"))
        self.ca.setText(_translate("MainWindow", "Nurse ID"))
        self.ch.setText(_translate("MainWindow", "DoB"))
        self.c4.setText(_translate("MainWindow", "Delete"))
        self.cj.setText(_translate("MainWindow", "City"))
        self.cf.setText(_translate("MainWindow", "EMail"))
        self.c1.setText(_translate("MainWindow", "Add"))
        self.cb.setText(_translate("MainWindow", "FName"))
        self.cx.setText(_translate("MainWindow", "Nurse Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_3), _translate("MainWindow", "Nurse"))
        self.de.setText(_translate("MainWindow", "BestBefore"))
        self.dg.setText(_translate("MainWindow", "AgeFactor(Below/Above)"))
        self.dd.setText(_translate("MainWindow", "ManfDate"))
        self.d3.setText(_translate("MainWindow", "Search"))
        self.dc.setText(_translate("MainWindow", "Brand"))
        self.d2.setText(_translate("MainWindow", "Display"))
        self.da.setText(_translate("MainWindow", "MedID"))
        self.dh.setText(_translate("MainWindow", "BatchNo"))
        self.d4.setText(_translate("MainWindow", "Delete"))
        self.df.setText(_translate("MainWindow", "AgeLimit"))
        self.d1.setText(_translate("MainWindow", "Add"))
        self.db.setText(_translate("MainWindow", "Name"))
        self.dx.setText(_translate("MainWindow", "Medicine Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_4), _translate("MainWindow", "Medicines"))
        self.ee.setText(_translate("MainWindow", "EMail"))
        self.eg.setText(_translate("MainWindow", "Covid(Yes/No)"))
        self.ed.setText(_translate("MainWindow", "City"))
        self.e3.setText(_translate("MainWindow", "Search"))
        self.ec.setText(_translate("MainWindow", "Address"))
        self.e2.setText(_translate("MainWindow", "Display"))
        self.ea.setText(_translate("MainWindow", "HospitalID"))
        self.eh.setText(_translate("MainWindow", "Contact"))
        self.e4.setText(_translate("MainWindow", "Delete"))
        self.ef.setText(_translate("MainWindow", "Rooms"))
        self.e1.setText(_translate("MainWindow", "Add"))
        self.eb.setText(_translate("MainWindow", "Name"))
        self.ex.setText(_translate("MainWindow", "Hospital Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_5), _translate("MainWindow", "Hospital"))
        self.fe.setText(_translate("MainWindow", "Gender"))
        self.fg.setText(_translate("MainWindow", "Qualification"))
        self.fd.setText(_translate("MainWindow", "LName"))
        self.fi.setText(_translate("MainWindow", "EMail"))
        self.f3.setText(_translate("MainWindow", "Search"))
        self.fc.setText(_translate("MainWindow", "MName"))
        self.f2.setText(_translate("MainWindow", "Display"))
        self.fa.setText(_translate("MainWindow", "DoctorID"))
        self.fh.setText(_translate("MainWindow", "Contact"))
        self.f4.setText(_translate("MainWindow", "Delete"))
        self.fj.setText(_translate("MainWindow", "WorksAt"))
        self.fk.setText(_translate("MainWindow", "Address"))
        self.ff.setText(_translate("MainWindow", "DoB"))
        self.f1.setText(_translate("MainWindow", "Add"))
        self.fb.setText(_translate("MainWindow", "FName"))
        self.fx.setText(_translate("MainWindow", "Doctors Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_6), _translate("MainWindow", "Doctor"))
        self.ge.setText(_translate("MainWindow", "VentStat(Working/NotWorking)"))
        self.gd.setText(_translate("MainWindow", "OxygenStatus(Available/Unavailable)"))
        self.g3.setText(_translate("MainWindow", "Search"))
        self.gc.setText(_translate("MainWindow", "Ward(ICU/General)"))
        self.g2.setText(_translate("MainWindow", "Display"))
        self.ga.setText(_translate("MainWindow", "BedID"))
        self.g4.setText(_translate("MainWindow", "Delete"))
        self.g1.setText(_translate("MainWindow", "Add"))
        self.gb.setText(_translate("MainWindow", "LastService"))
        self.gx.setText(_translate("MainWindow", "Bed Database"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_7), _translate("MainWindow", "Bed"))
        self.pushButton_5.setText(_translate("MainWindow", "Queries"))
        self.CovidHelathcareDatabase.setTabText(self.CovidHelathcareDatabase.indexOf(self.tab_8), _translate("MainWindow", "Queries"))

    #######################################################################################################



#A
    def InsertDataA(self):
        pid = ""
        fname = ""
        mname = ""
        lname = ""
        gender = ""
        email = ""
        contact = ""
        dob = ""
        address = ""
        city = ""
        type = ""
        status = ""
        hid = ""


        pid = self.aaa.text()
        fname = self.abb.text()
        mname = self.acc.text()
        lname = self.add.text()
        gender = self.aee.text()
        email = self.aff.text()
        contact = self.agg.text()
        dob = self.ahh.text()
        address = self.aii.text()
        city = self.ajj.text()
        type = self.akk.text()
        status = self.all.text()
        hid = self.amm.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO tests(pid, fname, mname, lname, gender, email, contact, dob, address, city, type, status, hid) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)", (pid,fname,mname,lname,gender,email,contact,dob,address,city,type,status,hid))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()



    def ShowDataA(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM tests"
        result = self.connection.execute(query)
        self.axx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.axx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.axx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()


    def OpenSearchA(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxA()
        self.ui.setupUi(self.window)
        self.window.show()

    

    def OpenDeleteA(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormA()
        self.ui.setupUi(self.window)
        self.window.show()



####################################################
#B
    def InsertDataB(self):
        pid = ""
        fname = ""
        mname = ""
        lname = ""
        gender = ""
        email = ""
        contact = ""
        dob = ""
        address = ""
        city = ""
        type = ""
        status = ""
        hid = ""


        pid = self.baa.text()
        fname = self.bbb.text()
        mname = self.bcc.text()
        lname = self.bdd.text()
        gender = self.bee.text()
        email = self.bff.text()
        contact = self.bgg.text()
        dob = self.bhh.text()
        address = self.bii.text()
        city = self.bjj.text()
        type = self.bkk.text()
        status = self.bll.text()
        hid = self.bmm.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO patient(pid, fname, mname, lname, gender, email, contact, dob, address, city, type, status, hid) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)", (pid,fname,mname,lname,gender,email,contact,dob,address,city,type,status,hid))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()
        
        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()


    def ShowDataB(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM patient"
        result = self.connection.execute(query)
        self.bxx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.bxx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.bxx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()

    def OpenSearchB(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxB()
        self.ui.setupUi(self.window)
        self.window.show()


    def OpenDeleteB(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormB()
        self.ui.setupUi(self.window)
        self.window.show()


####################################################
#C
    def InsertDataC(self):

        nurseid = ""
        fname = ""
        mname = ""
        lname = ""
        gender = ""
        email = ""
        contact = ""
        dob = ""
        address = ""
        city = ""

        nurseid = self.caa.text()
        fname = self.cbb.text()
        mname = self.ccc.text()
        lname = self.cdd.text()
        gender = self.cee.text()
        email = self.cff.text()
        contact = self.cgg.text()
        dob = self.chh.text()
        address = self.cii.text()
        city = self.cjj.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO nurse(nurseid,fname,mname,lname,gender,email,contact,dob,address,city) VALUES (?,?,?,?,?,?,?,?,?,?)", (nurseid,fname,mname,lname,gender,email,contact,dob,address,city))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()
        
        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()

    def ShowDataC(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM nurse"
        result = self.connection.execute(query)
        self.cxx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.cxx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.cxx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()


    def OpenSearchC(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxC()
        self.ui.setupUi(self.window)
        self.window.show()


    def OpenDeleteC(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormC()
        self.ui.setupUi(self.window)
        self.window.show()


####################################################
#D
    def InsertDataD(self):

        medid = ""
        name = ""
        brand = ""
        manfdate = ""
        bestbefore = ""
        agelimit = ""
        agefactor = ""
        batchno = ""


        medid = self.daa.text()
        name = self.dbb.text()
        brand = self.dcc.text()
        manfdate = self.ddd.text()
        bestbefore = self.dee.text()
        agelimit = self.dff.text()
        agefactor = self.dgg.text()
        batchno = self.dhh.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO medicines(medid,name,brand,manfdate,bestbefore,agelimit,agefactor,batchno) VALUES (?,?,?,?,?,?,?,?)", (medid,name,brand,manfdate,bestbefore,agelimit,agefactor,batchno))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()
        
        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()

    def ShowDataD(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM medicines"
        result = self.connection.execute(query)
        self.dxx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.dxx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.dxx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()

    def OpenSearchD(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxD()
        self.ui.setupUi(self.window)
        self.window.show()

    def OpenDeleteD(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormD()
        self.ui.setupUi(self.window)
        self.window.show()



####################################################
#E
    def InsertDataE(self):

        hid = ""
        name = ""
        address = ""
        city = ""
        email = ""
        rooms = ""
        covid = ""
        contact = ""

        hid = self.eaa.text()
        name = self.ebb.text()
        address = self.ecc.text()
        city = self.edd.text()
        email = self.eee.text()
        rooms = self.eff.text()
        covid = self.egg.text()
        contact = self.ehh.text()
        

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO hospital(hid,name,address,city,email,rooms,covid,contact) VALUES (?,?,?,?,?,?,?,?)", (hid,name,address,city,email,rooms,covid,contact))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()

    def ShowDataE(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM hospital"
        result = self.connection.execute(query)
        self.exx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.exx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.exx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()


    def OpenSearchE(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxE()
        self.ui.setupUi(self.window)
        self.window.show()



    def OpenDeleteE(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormE()
        self.ui.setupUi(self.window)
        self.window.show()


####################################################
#F
    def InsertDataF(self):

        doctorid = ""
        fname = ""
        mname = ""
        lname = ""
        gender = ""
        dob = ""
        qualification = ""
        contact = ""
        email = ""
        worksat = ""
        address = ""

        doctorid = self.faa.text()
        fname = self.fbb.text()
        mname = self.fcc.text()
        lname = self.fdd.text()
        gender = self.fee.text()
        dob = self.fff.text()
        qualification = self.fgg.text()
        contact = self.fhh.text()
        email = self.fii.text()
        worksat = self.fjj.text()
        address = self.fkk.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO doctor(doctorid,fname,mname,lname,gender,dob,qualification,contact,email,worksat,address) VALUES (?,?,?,?,?,?,?,?,?,?,?)", (doctorid,fname,mname,lname,gender,dob,qualification,contact,email,worksat,address))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()
        
        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()


    def ShowDataF(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM doctor"
        result = self.connection.execute(query)
        self.fxx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.fxx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.fxx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()

    def OpenSearchF(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxF()
        self.ui.setupUi(self.window)
        self.window.show()


    def OpenDeleteF(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormF()
        self.ui.setupUi(self.window)
        self.window.show()

####################################################
#G
    def InsertDataG(self):


        bedid = ""
        lastservice = ""
        ward = ""
        oxygenstatus = ""
        ventstat = ""
        

        bedid = self.gaa.text()
        lastservice = self.gbb.text()
        ward = self.gcc.text()
        oxygenstatus = self.gdd.text()
        ventstat = self.gee.text()

        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("INSERT INTO beds(bedid,lastservice,ward,oxygenstatus,ventstat) VALUES (?,?,?,?,?)", (bedid,lastservice,ward,oxygenstatus,ventstat))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Successfully Added")
            msg.setIcon(QMessageBox.Information)
            x = msg.exec_()
        
        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Message Display")
            msg.setText("Cannot Add!")
            msg.setIcon(QMessageBox.Warning)
            x = msg.exec_()

    def ShowDataG(self):
        self.connection = sqlite3.connect("CovidDatabaseManagement.db")
        query = "SELECT * FROM beds"
        result = self.connection.execute(query)
        self.gxx.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.gxx.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.gxx.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        self.connection.close()

    def OpenSearchG(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_SearchBoxG()
        self.ui.setupUi(self.window)
        self.window.show()


    def OpenDeleteG(self):
        self.window = QtWidgets.QWidget()
        self.ui = Ui_FormG()
        self.ui.setupUi(self.window)
        self.window.show()





    #######################################################################################################







####################################################################

####A
class Ui_SearchBoxA(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            pid = ''
            pid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from tests WHERE pid=" + str(pid))
                row = result.fetchone()
                searchresult = "PID: \t\t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + ' ' + str(row[2]) + ' ' + str(row[3]) + '\t\n' + "Gender: \t\t       " + str(row[4]) + '\t\n' + 'email: \t\t       ' + str(
                    row[5]) + '\t\n' + 'Contact: \t\t       ' + str(row[6]) + '\t\n' + 'Date of Birth : \t       ' + str(
                    row[7]) + '\t\n' + 'Address: \t\t       ' + str(row[8]) + '\t\n' + 'City: \t\t       ' + str(
                    row[9]) + '\t\n' + 'Type of Test: \t       ' + str(row[10]) + '\t\n' + 'Status of Test: \t       ' + str(
                    row[11]) + '\t\n' + 'Test conducted by HID: \t       ' + str(row[12]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Test Information")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()


class Ui_FormA(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from tests WHERE pid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()



####B
class Ui_SearchBoxB(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            pid = ''
            pid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from patient WHERE pid=" + str(pid))
                row = result.fetchone()
                searchresult = "PID: \t\t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + ' ' + str(row[2]) + ' ' + str(row[3]) + '\t\n' + "Gender: \t\t       " + str(row[4]) + '\t\n' + 'email: \t\t       ' + str(
                    row[5]) + '\t\n' + 'Contact: \t\t       ' + str(row[6]) + '\t\n' + 'Date of Birth : \t       ' + str(
                    row[7]) + '\t\n' + 'Address: \t\t       ' + str(row[8]) + '\t\n' + 'City: \t\t       ' + str(
                    row[9]) + '\t\n' + 'Type of Test: \t       ' + str(row[10]) + '\t\n' + 'Status of Patient: \t       ' + str(
                    row[11]) + '\t\n' + 'Test conducted by HID: \t       ' + str(row[12]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Patient Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()

class Ui_FormB(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from patient WHERE pid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()
    

####C
class Ui_SearchBoxC(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            pid = ''
            pid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from nurse WHERE nurseid=" + str(pid))
                row = result.fetchone()
                searchresult = "PID: \t\t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + ' ' + str(row[2]) + ' ' + str(row[3]) + '\t\n' + "Gender: \t\t       " + str(row[4]) + '\t\n' + 'email: \t\t       ' + str(
                    row[5]) + '\t\n' + 'Contact: \t\t       ' + str(row[6]) + '\t\n' + 'Date of Birth : \t       ' + str(
                    row[7]) + '\t\n' + 'Address: \t\t       ' + str(row[8]) + '\t\n' + 'City: \t\t       ' + str(
                    row[9]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Nurse Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()

class Ui_FormC(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from nurse WHERE nurseid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()

####D
class Ui_SearchBoxD(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            nurseid = ''
            nurseid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from medicines WHERE medid=" + str(nurseid))
                row = result.fetchone()
                searchresult = "MedicineID: \t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + '\t\nBrand : \t\t       ' + str(row[2]) + '\t\nManufacture Date : \t       ' + str(row[3]) + '\t\n' + "Best Before: \t       " + str(row[4]) + '\t\n' + 'Age Limit: \t\t       ' + str(
                    row[5]) + '\t\n' + 'Age Factor: \t       ' + str(row[6]) + '\t\n' + 'Batch Number : \t       ' + str(
                    row[7]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Medicine Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()

class Ui_FormD(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from medicines WHERE medid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()


####E
class Ui_SearchBoxE(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            hid = ''
            hid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from hospital WHERE hid=" + str(hid))
                row = result.fetchone()
                searchresult = "MedicineID: \t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + '\t\nAddress : \t\t       ' + str(row[2]) + '\t\nCity : \t\t       ' + str(
                    row[3]) + '\t\n' + "email: \t\t       " + str(row[4]) + '\t\n' + 'Room: \t\t       ' + str(
                    row[5]) + '\t\n' + 'Covid: \t\t       ' + str(row[6]) + '\t\n' + 'Contact : \t\t       ' + str(
                    row[7]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Hospital Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()

class Ui_FormE(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from hospital WHERE hid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()




####F
class Ui_SearchBoxF(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            did = ''
            did = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from doctor WHERE doctorid=" + str(did))
                row = result.fetchone()
                searchresult = "DoctorID: \t       " + str(row[0]) + '\t\n' + "Name: \t\t       " + str(
                    row[1]) + ' ' + str(row[2]) + ' ' + str(row[3]) + '\t\n' + "Gender: \t\t       " + str(row[4]) + '\t\n' + 'Date of Birth: \t       ' + str(
                    row[5]) + '\t\n' + 'Qualification: \t       ' + str(row[6]) + '\t\n' + 'Contact : \t\t       ' + str(
                    row[7]) + '\t\n' + 'email: \t\t       ' + str(row[8]) + '\t\n' + 'Works At: \t\t       ' + str(
                    row[9]) + '\t\n' + 'Address: \t\t       ' + str(row[10]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Doctor Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()

class Ui_FormF(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from doctor WHERE doctorid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()


####G
class Ui_SearchBoxG(object):
        def setupUi(self, SearchBox):
            SearchBox.setObjectName("SearchBox")
            SearchBox.resize(288, 137)
            self.search_label = QtWidgets.QLabel(SearchBox)
            self.search_label.setGeometry(QtCore.QRect(30, 40, 61, 21))
            self.search_label.setObjectName("search_label")
            self.search_lineEdit = QtWidgets.QLineEdit(SearchBox)
            self.search_lineEdit.setGeometry(QtCore.QRect(110, 40, 113, 22))
            self.search_lineEdit.setObjectName("search_lineEdit")
            self.search_pushButton = QtWidgets.QPushButton(SearchBox)
            self.search_pushButton.setGeometry(QtCore.QRect(90, 90, 93, 28))
            self.search_pushButton.setObjectName("search_pushButton")
            self.search_pushButton.clicked.connect(self.searchdata)
            self.retranslateUi(SearchBox)
            QtCore.QMetaObject.connectSlotsByName(SearchBox)

        def retranslateUi(self, SearchBox):
            _translate = QtCore.QCoreApplication.translate
            SearchBox.setWindowTitle(_translate("SearchBox", "Search Box"))
            self.search_label.setText(_translate("SearchBox", "ID"))
            self.search_pushButton.setText(_translate("SearchBox", "Search"))

        def searchdata(self):
            bedid = ''
            bedid = self.search_lineEdit.text()

            try:
                self.conn = sqlite3.connect("CovidDatabaseManagement.db")
                self.c = self.conn.cursor()
                result = self.c.execute("SELECT * from bed WHERE bedid=" + str(bedid))
                row = result.fetchone()
                searchresult = "Bed ID: \t\t       " + str(row[0]) + '\t\n' + "Last Service Date: \t       " + str(
                    row[1]) + ' ' + '\t\n' + "Ward Type: \t       " + str(row[2]) + '\t\n' + 'Oxygen Status: \t       ' + str(
                    row[3]) + '\t\n' + 'Ventilator Status: \t       ' + str(row[4]) + '\t\n'
                msg = QMessageBox()
                msg.setWindowTitle("Bed Details")
                msg.setText(searchresult)
                msg.setIcon(QMessageBox.Information)
                self.conn.commit()
                self.c.close()
                self.conn.close()

                x = msg.exec_()
            except Exception:
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText("Could not find required data!")
                msg.setIcon(QMessageBox.Warning)

                x = msg.exec_()


class Ui_FormG(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 141)
        self.delete_label = QtWidgets.QLabel(Form)
        self.delete_label.setGeometry(QtCore.QRect(20, 50, 61, 21))
        self.delete_label.setObjectName("delete_label")
        self.delete_line = QtWidgets.QLineEdit(Form)
        self.delete_line.setGeometry(QtCore.QRect(90, 50, 261, 22))
        self.delete_line.setObjectName("delete_line")
        self.delete_button = QtWidgets.QPushButton(Form)
        self.delete_button.setGeometry(QtCore.QRect(150, 100, 93, 28))
        self.delete_button.setObjectName("delete_button")
        self.delete_button.clicked.connect(self.deletedata)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Delete box"))
        self.delete_label.setText(_translate("Form", "ID:"))
        self.delete_button.setText(_translate("Form", "Delete"))

    def deletedata(self):
        x = ''
        x = self.delete_line.text()
        try:
            self.conn = sqlite3.connect("CovidDatabaseManagement.db")
            self.c = self.conn.cursor()
            self.c.execute("DELETE from beds WHERE bedid="+str(x))
            self.conn.commit()
            self.c.close()
            self.conn.close()
            msg = QMessageBox()
            msg.setWindowTitle("Delete")
            msg.setText("Delete Successful")
            msg.setIcon(QMessageBox.Information)

            x = msg.exec_()

        except Exception:
            msg = QMessageBox()
            msg.setWindowTitle("Error")
            msg.setText("Could not find required data!")
            msg.setIcon(QMessageBox.Warning)

            x = msg.exec_()




####################################################################

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
